name: Deploy ASP.NET Core to Ubuntu Server

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
    
    - name: Publish
      run: dotnet publish --no-build --configuration Release --output ./publish
    
    - name: Create deployment package
      run: |
        cd publish
        tar -czf ../deployment.tar.gz *
        cd ..
    
    - name: Deploy to Ubuntu Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        script: |
          # Stop the application if running
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S systemctl stop aspdotnetapi || true
          
          # Create application directory if it doesn't exist
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S mkdir -p /var/www/html/aspdotnetapi
          
          # Backup current deployment (optional)
          if [ -d "/var/www/html/aspdotnetapi/backup" ]; then
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S rm -rf /var/www/html/aspdotnetapi/backup
          fi
          if [ -f "/var/www/html/aspdotnetapi/TestAPI.dll" ]; then
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S mkdir -p /var/www/html/aspdotnetapi/backup
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S cp -r /var/www/html/aspdotnetapi/* /var/www/html/aspdotnetapi/backup/ || true
          fi
          
          # Clean current deployment
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S rm -rf /var/www/html/aspdotnetapi/*
    
    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        source: "deployment.tar.gz"
        target: "/tmp/"
    
    - name: Extract and configure application
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        script: |
          # Extract deployment package
          cd /tmp
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S tar -xzf deployment.tar.gz -C /var/www/html/aspdotnetapi/
          
          # Set proper permissions
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S chown -R www-data:www-data /var/www/html/aspdotnetapi
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S chmod -R 755 /var/www/html/aspdotnetapi
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S chmod +x /var/www/html/aspdotnetapi/TestAPI
          
          # Create or update systemd service
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S tee /etc/systemd/system/aspdotnetapi.service > /dev/null <<EOF
          [Unit]
          Description=ASP.NET Core API Application
          After=network.target
          
          [Service]
          Type=notify
          ExecStart=/usr/bin/dotnet /var/www/html/aspdotnetapi/TestAPI.dll
          Restart=always
          RestartSec=5
          KillSignal=SIGINT
          SyslogIdentifier=aspdotnetapi
          User=www-data
          Environment=ASPNETCORE_ENVIRONMENT=Production
          Environment=ASPNETCORE_URLS=http://localhost:5001
          WorkingDirectory=/var/www/html/aspdotnetapi
          
          [Install]
          WantedBy=multi-user.target
          EOF
          
          # Reload systemd and start service
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S systemctl daemon-reload
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S systemctl enable aspdotnetapi
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S systemctl start aspdotnetapi
          
          # Wait a moment for service to start
          sleep 5
          
          # Check service status
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S systemctl status aspdotnetapi --no-pager
          
          # Clean up
          rm -f /tmp/deployment.tar.gz
