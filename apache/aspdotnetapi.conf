# Apache Virtual Host Configuration for ASP.NET Core API
# Place this file in /etc/apache2/sites-available/ on your Ubuntu server
# Enable with: sudo a2ensite aspdotnetapi.conf

<VirtualHost *:80>
    # Replace with your actual domain name
    ServerName your-domain.com
    ServerAlias www.your-domain.com
    
    # Document root (optional, for static files if needed)
    DocumentRoot /var/www/html/aspdotnetapi
    
    # Proxy configuration to forward requests to ASP.NET Core app on port 5001
    ProxyPreserveHost On
    ProxyPass / http://localhost:5001/
    ProxyPassReverse / http://localhost:5001/
    ProxyRequests Off
    
    # Handle WebSocket connections (if your app uses SignalR or WebSockets)
    ProxyPass /ws ws://localhost:5001/ws
    ProxyPassReverse /ws ws://localhost:5001/ws
    
    # Set headers for better proxy handling
    ProxyPassReverse / http://localhost:5001/
    
    # Forward original client IP and protocol information
    ProxyPreserveHost On
    ProxyAddHeaders On
    
    # Set headers that ASP.NET Core can use to determine original request info
    RequestHeader set X-Forwarded-Proto "http"
    RequestHeader set X-Forwarded-Port "80"
    
    # Security headers
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # CORS headers (adjust as needed for your API)
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
    
    # Handle preflight OPTIONS requests
    RewriteEngine On
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^(.*)$ $1 [R=200,L]
    
    # Logging
    ErrorLog ${APACHE_LOG_DIR}/aspdotnetapi_error.log
    CustomLog ${APACHE_LOG_DIR}/aspdotnetapi_access.log combined
    
    # Optional: Serve static files directly from Apache (for better performance)
    # Uncomment and adjust paths as needed
    # Alias /static /var/www/html/aspdotnetapi/wwwroot
    # <Directory "/var/www/html/aspdotnetapi/wwwroot">
    #     Require all granted
    # </Directory>
</VirtualHost>

# Optional: HTTPS Virtual Host (recommended for production)
# Uncomment and configure after obtaining SSL certificate
# <VirtualHost *:443>
#     ServerName your-domain.com
#     ServerAlias www.your-domain.com
#     
#     DocumentRoot /var/www/html/aspdotnetapi
#     
#     # SSL Configuration
#     SSLEngine on
#     SSLCertificateFile /path/to/your/certificate.crt
#     SSLCertificateKeyFile /path/to/your/private.key
#     # SSLCertificateChainFile /path/to/your/chain.crt  # If using intermediate certificates
#     
#     # Proxy configuration for HTTPS
#     ProxyPreserveHost On
#     ProxyPass / http://localhost:5001/
#     ProxyPassReverse / http://localhost:5001/
#     ProxyRequests Off
#     
#     # Set HTTPS headers
#     RequestHeader set X-Forwarded-Proto "https"
#     RequestHeader set X-Forwarded-Port "443"
#     
#     # Security headers for HTTPS
#     Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
#     Header always set X-Content-Type-Options nosniff
#     Header always set X-Frame-Options DENY
#     Header always set X-XSS-Protection "1; mode=block"
#     
#     # Logging
#     ErrorLog ${APACHE_LOG_DIR}/aspdotnetapi_ssl_error.log
#     CustomLog ${APACHE_LOG_DIR}/aspdotnetapi_ssl_access.log combined
# </VirtualHost>

# Redirect HTTP to HTTPS (uncomment when HTTPS is configured)
# <VirtualHost *:80>
#     ServerName your-domain.com
#     ServerAlias www.your-domain.com
#     Redirect permanent / https://your-domain.com/
# </VirtualHost>